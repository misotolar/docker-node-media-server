diff --git a/src/node_rtmp_server.js b/src/node_rtmp_server.js
index c4f529b..f9d35d0 100644
--- a/src/node_rtmp_server.js
+++ b/src/node_rtmp_server.js
@@ -13,11 +13,14 @@ const NodeRtmpSession = require('./node_rtmp_session');
 const context = require('./node_core_ctx');
 
 const RTMP_PORT = 1935;
+const RTMP_HOST = '0.0.0.0';
 const RTMPS_PORT = 443;
+const RTMPS_HOST = '0.0.0.0';
 
 class NodeRtmpServer {
   constructor(config) {
     config.rtmp.port = this.port = config.rtmp.port ? config.rtmp.port : RTMP_PORT;
+    config.rtmp.host = this.host = config.rtmp.host ? config.rtmp.host : RTMP_HOST;
     this.tcpServer = Net.createServer((socket) => {
       let session = new NodeRtmpSession(config, socket);
       session.run();
@@ -25,6 +28,7 @@ class NodeRtmpServer {
 
     if (config.rtmp.ssl){
       config.rtmp.ssl.port = this.sslPort = config.rtmp.ssl.port ? config.rtmp.ssl.port : RTMPS_PORT;
+      config.rtmp.ssl.host = this.sslHost = config.rtmp.ssl.host ? config.rtmp.ssl.host : RTMPS_HOST;
       try {
         const options = {
           key: Fs.readFileSync(config.rtmp.ssl.key),
@@ -41,8 +45,8 @@ class NodeRtmpServer {
   }
 
   run() {
-    this.tcpServer.listen(this.port, () => {
-      Logger.log(`Node Media Rtmp Server started on port: ${this.port}`);
+    this.tcpServer.listen(this.port, this.host, () => {
+      Logger.log(`Node Media Rtmp Server started on port: ${this.host}:${this.port}`);
     });
 
     this.tcpServer.on('error', (e) => {
@@ -54,8 +58,8 @@ class NodeRtmpServer {
     });
 
     if (this.tlsServer) {
-      this.tlsServer.listen(this.sslPort, () => {
-        Logger.log(`Node Media Rtmps Server started on port: ${this.sslPort}`);
+      this.tlsServer.listen(this.sslPort, this.sslHost, () => {
+        Logger.log(`Node Media Rtmps Server started on port: ${this.sslHost}:${this.sslPort}`);
       });
 
       this.tlsServer.on('error', (e) => {
